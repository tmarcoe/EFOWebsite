/************************************
 * Product Sales
 ***********************************/
 begin

 	mapFile: "accounts.xml";
 	
 	// Accounts to be debited or credited
 	string cashAccount = "Cash";
 	string salesAccount = "Sales";
 	string taxAccount = "Tax Account";
 	string arAccount = "Accounts Receivable";

 	number reference = sales.getReference();

	decimal totalAmount = sales.getTotal_price();
 	decimal taxAmount = sales.getTotal_tax();
 	if (sales.getPayment_type() == "Cash") {
  		debit(sales.getTotal_price(), cashAccount);
 		ledger(D, sales.getTotal_price(), cashAccount, getDescription());
		credit(totalAmount, salesAccount);
 		ledger(C, totalAmount, salesAccount, getDescription());
 		credit(taxAmount, taxAccount);
 		ledger(C, taxAmount, taxAccount, getDescription());
	}else{
  		debit(sales.getTotal_price(), arAccount);
 		ledger(D, sales.getTotal_price(), arAccount, getDescription());
 	 	credit(totalAmount, salesAccount);
 		ledger(C, totalAmount, salesAccount, getDescription());
 		credit(taxAmount, taxAccount);
 		ledger(C, taxAmount, taxAccount, getDescription());
 		decimal total_balance = (receivables.getTotal_due() - receivables.getDown_payment()) * (1.0 + (receivables.getInterest() / 100.00)) + taxAmount;
		
		receivables.setReference(sales.getReference());
		receivables.setCustomer(sales.getCustomer_name());	
		receivables.setInvoice_date(sales.getProcessed());
		receivables.setStatus("O");
		receivables.setTotal_balance(total_balance);

		date nxtDate = nextDate(receivables.getInvoice_date(), latest_date, receivables.getSchedule());
		payment.setDate_due(nxtDate);
		
		string eachPayment = receivables.getEach_payment();
		string customer = sales.getCustomer_name();

		number id = 1;

		if (lookup("SELECT COUNT(*) FROM PaymentsReceived",id) > 0) {
			id = lookup("SELECT id FROM PaymentsReceived ORDER BY id DESC", id);
			id = id + 1;
		}

		payment.setId(id);
		
		 //Event name
 		string eventName = "Receive " + eachPayment + " from " + customer;

		event.setDate(nxtDate);
		event.setName(eventName);
		event.setCompleted(false);
		string link = "/accounting/receivepayment?id=" + payment.getId();

		event.setLink(link);
		
		insert(event);
		payment.setEvent(event.getId());

	}

	inventoryLedger(D, sales.getTotal_qty(), sales.getTotal_price(), getDescription());
	merge(sales);
	commitStock(sales.getSalesItem());
		
 end
