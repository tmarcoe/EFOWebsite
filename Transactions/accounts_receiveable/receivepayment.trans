/********************************************************
 * Receive Payment from receivables
 ********************************************************/

begin
	mapFile: "accounts.xml";

	string cashAccount = "Cash";
	string arAccount = "Accounts Receivable";
	decimal pmnt = 0.0;
	number paymentRef = transactions.getPayment_ref();
	
	dao oldPayments = lookup("FROM RevenuePayments WHERE id = {d}", paymentRef );
	dao revenueTerms = lookup("FROM RevenueTerms WHERE reference = {d}", oldPayments.getReference());
	dao revenues = lookup("FROM Revenues WHERE reference = {d}", oldPayments.getReference());
	
	update("UPDATE Events SET completed = true WHERE id = {d}", oldPayments.getEvent());

	if (revenueTerms.getLoan_balance() <= transactions.getAmount()) {
		pmnt = revenueTerms.getLoan_balance();
	}else{
		pmnt = transactions.getAmount();
	}

	debit(pmnt, cashAccount);
	ledger(D, pmnt, cashAccount, transactions.getDescr());
	credit(pmnt, arAccount);
	ledger(C, pmnt, arAccount, transactions.getDescr());

	date dateDue = nextDate(transactions.getStart(), oldPayments.getDue(), "Monthly"); 
	string name = lookup("SELECT name FROM Events WHERE id = {d}", oldPayments.getEvent());

	oldPayments.setPayment_date(today());
	oldPayments.setPayment_made(pmnt);
	
	revenueTerms.setLoan_balance(revenueTerms.getLoan_balance() - pmnt);
	revenueTerms.setRemaining(revenueTerms.getRemaining() - 1);

	if (revenueTerms.getLoan_balance() > 0.0) {

		newPayment.setReference(oldPayments.getReference());
		newPayment.setDue(dateDue);
		newPayment.setAmount_due(pmnt);
		newPayment.setPayment_made(0.00);
		newPayment.setPenalties(0.00);
		newPayment.setRevenueTerms(revenueTerms);
		revenueTerms.add(newPayment);
		newPayment.setRevenueTerms(revenueTerms);
	}
	
	merge(revenues);

	if (revenueTerms.getLoan_balance() > 0.0) {
		
		number nextId = lookup("SELECT id from RevenuePayments ORDER BY id DESC");
	
		string link = "/basic/payment?id=" + nextId + "&payment_name=" + transactions.getPayment_name() + "&profilename=Receive Payment";
		newEvent.setDate(dateDue);
		newEvent.setName(name);
		newEvent.setLink(link);
		newEvent.setCompleted(false);

		insert(newEvent);

		update("UPDATE RevenuePayments SET event = {d} WHERE id = {d}", newEvent.getId(), nextId);
	}
			
end
