/*******************************************************************
 * A business loan is approved
 *******************************************************************/

 begin
	mapFile: "accounts.xml";
	string cashAccount = "Cash";
	string loanAccount = "Loan Liability";

	decimal loanAmount = transactions.getAmount();

	string descr = transactions.getDescr() + " from " + transactions.getPayment_name();

	debit(loanAmount, cashAccount);
	ledger(D, loanAmount, cashAccount, descr);
	credit(loanAmount, loanAccount);
	ledger(C, loanAmount, loanAccount, descr);

	// Build loans record
	loans.setPayee(transactions.getPayment_name());
	loans.setAmount(loanAmount);
	loans.setDescr(transactions.getDescr());
	loans.setLoanTerms(loanTerms);

	loanTerms.setDown(transactions.getDown());
	loanTerms.setInterest(transactions.getInterest());
	loanTerms.setNum_payments(transactions.getNum_payments());
	loanTerms.setRemaining(transactions.getNum_payments());
	loanTerms.setEach_payment(transactions.getEach_payment());
	loanTerms.setLoan_balance(loanAmount);
	loanTerms.setStart(transactions.getStart());
	loanTerms.setSchedule(transactions.getSchedule());
	loanTerms.setLoans(loans);
	loanTerms.add(loanPayments);

	loanPayments.setDue(loanTerms.getStart());
	loanPayments.setAmount_due(loanTerms.getEach_payment());
	loanPayments.setPayment_made(0.00);
	loanPayments.setPenalties(0.00);
	loanPayments.setLoanTerms(loanTerms);

	insert(loans);

	events.setDate(transactions.getStart());
	events.setName("Pay " + transactions.getEach_payment() + " to " + transactions.getPayment_name() + " for " + transactions.getDescr());
	events.setLink("/basic/payment?id=" + loanPayments.getId() + "&payment_name=" + transactions.getPayment_name() + "&profilename=Loan Payment");
	events.setCompleted(false);

	insert(events);

	update("UPDATE LoanPayments SET reference = {d}, event = {d} WHERE id = {d}", loanTerms.getReference(), events.getId(), loanPayments.getId());

 end
