/********************************************
 * Payment Paid
 ********************************************/
begin
	mapFile: "accounts.xml";

 	string apAccount = "Accounts Payable";
 	string cashAccount = "Cash";
 	decimal amount = 0.0;

 	string description = "Loan Payment to reference number " + payables.getReference();

 	if ( payables.getEach_payment() <= payables.getTotal_balance() ) {
 		amount = payables.getEach_payment();
 	}else{
 		amount = payables.getTotal_balance();
 	}

 	debit(amount, apAccount);
	ledger(D, amount, apAccount, description);

	credit(amount, cashAccount);
	ledger(C, amount, cashAccount, description);
 	
	decimal balance = (payables.getTotal_balance() - billed.getPayment());
	payables.setTotal_balance(balance);
	if (amount > balance) {
		amount = balance;
	}
 	update("UPDATE Payables SET total_balance = {f} WHERE reference = {d}", balance, payables.getReference());
 	update("UPDATE Events SET completed = true WHERE id = {d}", billed.getEvent());
	
 	if (payables.getTotal_balance() > 0.0) {
		nextBill.setId(0);
		nextBill.setReference(payables.getReference());
		
		nextBill.setPayment_due(amount);
		
		date nextPayment = nextDate(payables.getDate_begin(), billed.getDate_due(), payables.getSchedule());
		nextBill.setDate_due(nextPayment);
		
		string eventName = "Pay " + amount + " to " + payables.getSupplier();
		event.setDate(nextPayment);
		event.setName(eventName);
		event.setCompleted(false);

		insert(event);
		nextBill.setEvent(event.getId());

		insert(nextBill);
		string link = "/accounting/payamount?id=" + nextBill.getId();
		update("UPDATE Events SET link = {s} WHERE id = {d}", link, event.getId());
	}else{
		update("UPDATE Payables SET status = 'C' WHERE reference = {d}", payables.getReference());
	}


end
